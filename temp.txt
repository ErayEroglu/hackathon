from flask import Flask, request, jsonify
import requests
import json

app = Flask(__name__)

MINIO_ENDPOINT = "localhost:9000"
MINIO_ADMIN_ACCESS_KEY = "admin"
MINIO_ADMIN_SECRET_KEY = "password"

def add_minio_user(new_user_access_key, new_user_secret_key):
    admin_api_url = f"http://{MINIO_ENDPOINT}/minio/admin/v3/add-user"

    new_user = {
        "accessKey": new_user_access_key,
        "secretKey": new_user_secret_key
    }

    try:
        response = requests.post(
            admin_api_url,
            headers={"Content-Type": "application/json"},
            auth=(MINIO_ADMIN_ACCESS_KEY, MINIO_ADMIN_SECRET_KEY),
            data=json.dumps(new_user)
        )

        if response.status_code == 200:
            return "User added successfully", 200
        else:
            return f"Error adding user: {response.text}", response.status_code
    except Exception as e:
        return f"Exception occurred: {str(e)}", 500

def list_minio_users():
    admin_api_url = f"http://{MINIO_ENDPOINT}/minio/admin/v3/list-users"

    try:
        response = requests.get(
            admin_api_url,
            headers={"Content-Type": "application/json"},
            auth=(MINIO_ADMIN_ACCESS_KEY, MINIO_ADMIN_SECRET_KEY)
        )

        if response.status_code == 200:
            users = response.json()
            return jsonify(users), 200
        else:
            return f"Error listing users: {response.text}", response.status_code
    except Exception as e:
        return f"Exception occurred: {str(e)}", 500

def get_minio_user_info(user_access_key):
    admin_api_url = f"http://{MINIO_ENDPOINT}/minio/admin/v3/user-info?accessKey={user_access_key}"

    try:
        response = requests.get(
            admin_api_url,
            headers={"Content-Type": "application/json"},
            auth=(MINIO_ADMIN_ACCESS_KEY, MINIO_ADMIN_SECRET_KEY)
        )

        if response.status_code == 200:
            user_info = response.json()
            return jsonify(user_info), 200
        else:
            return f"Error getting user info: {response.text}", response.status_code
    except Exception as e:
        return f"Exception occurred: {str(e)}", 500

def update_minio_user_policy(user_access_key, policy_name):
    admin_api_url = f"http://{MINIO_ENDPOINT}/minio/admin/v3/set-user-policy"

    data = {
        "accessKey": user_access_key,
        "policyName": policy_name
    }

    try:
        response = requests.put(
            admin_api_url,
            headers={"Content-Type": "application/json"},
            auth=(MINIO_ADMIN_ACCESS_KEY, MINIO_ADMIN_SECRET_KEY),
            data=json.dumps(data)
        )

        if response.status_code == 200:
            return f"Policy '{policy_name}' set for user '{user_access_key}' successfully", 200
        else:
            return f"Error setting policy: {response.text}", response.status_code
    except Exception as e:
        return f"Exception occurred: {str(e)}", 500

@app.route('/add_user', methods=['POST'])
def add_user():
    data = request.json
    new_user_access_key = data.get('access_key')
    new_user_secret_key = data.get('secret_key')
    return add_minio_user(new_user_access_key, new_user_secret_key)

@app.route('/list_users', methods=['GET'])
def list_users():
    return list_minio_users()

@app.route('/user_info/<string:access_key>', methods=['GET'])
def user_info(access_key):
    return get_minio_user_info(access_key)

@app.route('/update_policy', methods=['PUT'])
def update_policy():
    data = request.json
    user_access_key = data.get('access_key')
    policy_name = data.get('policy_name')
    return update_minio_user_policy(user_access_key, policy_name)

if __name__ == '__main__':
    app.run(debug=True)
